using VulnerabilityMetrics.DataSource.Harbor;

namespace VulnerabilityMetrics.DataSource;

internal class VulnerabilityDataProvider
{
    private const int Interval = 5;
    private List<VulnerabilityReportSeverityCounters> _vulnerabilityReports = new();
    private readonly VulnerabilityProvider _vulnerabilityProvider;
    
    public VulnerabilityDataProvider(HarborApi harborApi)
    {
        _vulnerabilityProvider = new(harborApi);
    }
    
    public async Task Start()
    {
        await Task.Run(async () =>
        {
            //ToDo: handle shutdown/cancellation
            while (true)
            {
                _vulnerabilityReports = await _vulnerabilityProvider.Get();
                
                //Get the report every x seconds
                await Task.Delay(Interval * 1000);
            }
        });
    }
    
    public List<VulnerabilityReportSeverityCounters> Get()
    {
        return _vulnerabilityReports;
    }
}